security:
  encoders:
    FOS\UserBundle\Model\UserInterface: sha512

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    fos_userbundle:
      id: fos_user.user_provider.username_email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    admin:
      pattern: /admin(.*)
      context: user
      form_login:
        login_path: admin_login
        use_forward: false
        check_path: admin_login
        failure_path: null
      logout:
        path: admin_logout
        target: admin_login
      anonymous: lazy
      switch_user: true
      guard:
        authenticators:
          - App\Security\AdminLoginAuthenticator
    main:
      pattern: .*
      context: user
      form_login:
        provider: fos_userbundle
        login_path: /login
        use_forward: false
        check_path: /login_check
        failure_path: null
      logout: true
      anonymous: true
    oauth_token: # Everyone can access the access token URL.
      pattern: ^/oauth/v2/token
      security: false
    api:
      pattern: ^/api                             # All URLs are protected
      fos_oauth: true                            # OAuth2 protected resource
      stateless: true                            # Do no set session cookies
      anonymous: false                           # Anonymous access is not allowed

  role_hierarchy:
    ROLE_SUPPLIER: [ ROLE_ADMIN, ROLE_USER, ROLE_SONATA_ADMIN ]
    ROLE_STATS: [ ROLE_SONATA_ADMIN ]
    ROLE_OPERATOR: [ ROLE_SUPPLIER, ROLE_ADMIN, ROLE_USER, ROLE_SONATA_ADMIN ]
    ROLE_SUPER_ADMIN: [ ROLE_OPERATOR, ROLE_SUPPLIER, ROLE_ADMIN, ROLE_USER, ROLE_STATS, ROLE_SONATA_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

      # activate different ways to authenticate

      # http_basic: true
      # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

    # form_login: true
    # https://symfony.com/doc/current/security/form_login_setup.html

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: /connexion, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/efconnect, role: ROLE_ADMIN }
    - { path: ^/elfinder, role: ROLE_ADMIN }
    - { path: ^/command-scheduler, role: ROLE_ADMIN }
    - { path: ^/api, roles: [ IS_AUTHENTICATED_FULLY ] }

