# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: 'fr'
  db_name: 'intranet_v1'
  db_user: 'phpmyadmin'
  db_pwd: 'neHDhQ5T8ZNFTyzg'
  base_uri_lmeco: 'https://www.lmecoproduction.fr/api'
  app.path.files: /uploads/files

services:
  twig.extension.intl:
    class: Twig_Extensions_Extension_Intl
    tags:
      - { name: twig.extension }
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

#  App\Configuration\ListFormFiltersConfigPass:
#    decorates: AlterPHP\EasyAdminExtensionBundle\Configuration\ListFormFiltersConfigPass

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  gedmo.listener.sluggable:
    class: Gedmo\Sluggable\SluggableListener
    tags:
      - { name: doctrine.event_subscriber, connection: default }
    calls:
      - [ setAnnotationReader, [ "@annotation_reader" ] ]

  alaczi.twig.country_extension:
    class: alaczi\Twig\Extension\CountryExtension
    tags:
      - { name: twig.extension }

  App\Form\ProductionType:
    arguments: ['@router.default']
    tags: [form.type]

  App\Handler\RequestForSavHandler:
    arguments: ['@doctrine.orm.entity_manager', '@event_dispatcher', '@mailer', '@twig', '@translator', '@App\Mailer\Mailer']

  App\Form\SavArticleType:
    class: App\Form\SavArticleType
    arguments: ['@sonata.admin.manager.orm']
    tags:
      - { name: form.type, alias: App\Form\ArticleAutocompleteType }

  ########### LISTENERS ##########
#  App\EventListeners\EasyAdminSubscriber:
#    arguments: ['@doctrine.orm.entity_manager', '@App\Mailer\Mailer', '@App\Handler\RequestForSavHandler']
#    tags:
#      - { name: doctrine.orm.event_subscriber }

  App\EventListeners\DoctrineSubscriber:
    arguments: ['@doctrine.orm.entity_manager']
    tags:
      - { name: doctrine.event_subscriber, connection: default }
  ########### END LISTENERS ##########

  App\Command\AppImportProductionsCommand:
    tags:
      - { name: 'console.command', command: 'app:import:productions' }
    arguments: ['@doctrine.orm.entity_manager', '%db_name%', '%db_user%', '%db_pwd%']

  App\Command\AppImportProductionsHistoryCommand:
    tags:
      - { name: 'console.command', command: 'app:import:productionhistory' }
    arguments: ['@doctrine.orm.entity_manager', '%db_name%', '%db_user%', '%db_pwd%']

  App\Command\AppImportCustomersCommand:
    tags:
      - { name: 'console.command', command: 'app:import:customers' }
    arguments: ['@doctrine.orm.entity_manager', '%db_name%', '%db_user%', '%db_pwd%']

  App\Command\AppImportSavsCommand:
    tags:
      - { name: 'console.command', command: 'app:import:savs' }
    arguments: ['@doctrine.orm.entity_manager', '%db_name%', '%db_user%', '%db_pwd%']

  App\Command\AppImportSavsNatureCommand:
    tags:
      - { name: 'console.command', command: 'app:import:savnature' }
    arguments: ['@doctrine.orm.entity_manager', '%db_name%', '%db_user%', '%db_pwd%']

  App\Command\AppImportSavsHistoryCommand:
    tags:
      - { name: 'console.command', command: 'app:import:savhistory' }
    arguments: ['@doctrine.orm.entity_manager', '%db_name%', '%db_user%', '%db_pwd%']

  App\Command\AppImportSuppliersCommand:
    tags:
      - { name: 'console.command', command: 'app:import:suppliers' }
    arguments: ['@doctrine.orm.entity_manager', '%kernel.project_dir%']

  App\Command\AppImportCitiesCommand:
    tags:
      - { name: 'console.command', command: 'app:import:cities' }
    arguments: [ '@doctrine.orm.entity_manager', '%kernel.project_dir%' ]

  App\Command\AppImportArrivalsCommand:
    tags:
      - { name: 'console.command', command: 'app:import:arrivals' }
    arguments: ['@doctrine.orm.entity_manager', '%kernel.project_dir%']

  App\Command\AppImportDealersCommand:
    tags:
      - { name: 'console.command', command: 'app:import:dealers' }
    arguments: ['@doctrine.orm.entity_manager', '%db_name%', '%db_user%', '%db_pwd%']

  App\Command\AppImportDealersDivaltoCommand:
    tags:
      - { name: 'console.command', command: 'app:import:dealers-divalto' }
    arguments: ['@doctrine.orm.entity_manager', '%kernel.project_dir%']

  App\Command\AppTestCommand:
    tags:
      - { name: 'console.command', command: 'app:test' }
    arguments: ['@doctrine.orm.entity_manager']

  App\Command\AppUpdateArticlesCommand:
    tags:
      - { name: 'console.command', command: 'app:update:articles' }
    arguments: ['@doctrine.orm.entity_manager', '%base_uri_lmeco%']

  App\Command\AppUpdateProductTypesCommand:
    tags:
      - { name: 'console.command', command: 'app:update:product:types' }
    arguments: ['@doctrine.orm.entity_manager', '%base_uri_lmeco%']

  App\Command\AppUpdateSubProductTypesCommand:
    tags:
      - { name: 'console.command', command: 'app:update:subproduct:types' }
    arguments: ['@doctrine.orm.entity_manager', '%base_uri_lmeco%', '%kernel.project_dir%']

  App\Command\AppImportFeaturesSubProductsCommand:
    tags:
      - { name: 'console.command', command: 'app:import:features' }
    arguments: ['@doctrine.orm.entity_manager', '%kernel.project_dir%']

  App\Command\UserChangePasswordCommand:
    tags:
      - { name: 'console.command', command: 'app:user:change-password' }
    arguments:
      $em: '@doctrine.orm.entity_manager'
      $passwordEncoder: '@security.user_password_encoder.generic'

  App\Command\AppUpdateSavsCommand:
    tags:
      - { name: 'console.command', command: 'app:update:savs' }
    arguments:
      $em: '@doctrine.orm.entity_manager'

  App\Command\UserPromoteCommand:
    tags:
      - { name: 'console.command', command: 'app:user:promote' }
    arguments:
      $em: '@doctrine.orm.entity_manager'

  App\Mailer\Mailer:
    arguments:
      $twig: '@twig'
      $mailer: '@mailer'
      $translator: '@translator'
      $projectDir: '%kernel.project_dir%'
      $router: '@router'
  ########### END COMMANDS ###############

  ########### COMMANDS LAMA ###############
  App\Command\Lama\AppImportArticlesCommand:
    tags:
      - { name: 'console.command', command: 'lama:import:articles' }
    arguments: [ '@doctrine.orm.entity_manager', '@App\Handler\CsvHandler','%kernel.project_dir%']

  App\Command\Lama\AppImportDealerCommand:
    tags:
      - { name: 'console.command', command: 'lama:import:dealer' }
    arguments: [ '@doctrine.orm.entity_manager', '@App\Handler\CsvHandler','%kernel.project_dir%']

  App\Command\Lama\AppCreateProductTypesCommand:
    tags:
      - { name: 'console.command', command: 'lama:create:producttypes' }
    arguments: [ '@doctrine.orm.entity_manager', '@App\Handler\CsvHandler','%kernel.project_dir%' ]
  App\Command\Lama\AppCreateBrandsCommand:
    tags:
      - { name: 'console.command', command: 'lama:create:brands' }
    arguments: [ '@doctrine.orm.entity_manager', '@App\Handler\CsvHandler','%kernel.project_dir%' ]
  App\Command\Lama\AppCreateGammesCommand:
    tags:
      - { name: 'console.command', command: 'lama:create:gammes' }
    arguments: [ '@doctrine.orm.entity_manager', '@App\Handler\CsvHandler','%kernel.project_dir%' ]
  ########### END COMMANDS ###############